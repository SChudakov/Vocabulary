<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>VOCABULARY</display-name>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <context-param>
        <!--these parameters are needed by listener-->
        <param-name>contextConfigLocation</param-name>
        <!--Upon initialization of a DispatcherServlet, Spring MVC looks for a
        file named [servlet-name]-servlet.xml in the WEB-INF directory of your web application
        and creates the beans defined there...-->
        <param-value>/WEB-INF/MyServlet-servlet.xml</param-value>
    </context-param>

    <!--added-->

    <listener>
        <!-- reads parameters and sends them to dispatcher servlet -->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <servlet>
        <servlet-name>MyServlet</servlet-name>
        <!--not our servlet, but spring's dispatcher servlet-->
        <!--it reads an xml file and looks for files with annotations -->
        <!--then it creates corresponding beans and runs theirs methods, as if they were written in controller bean-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>MyServlet</servlet-name>
        <url-pattern>/myServlet</url-pattern>
        <url-pattern>/sessionServlet</url-pattern>
        <url-pattern>/lastname</url-pattern>
        <url-pattern>/job</url-pattern>

        <url-pattern>/registration</url-pattern>
        <url-pattern>/userregistration</url-pattern>
        <url-pattern>/confirmation</url-pattern>
        <url-pattern>/login</url-pattern>
        <url-pattern>/logout</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
</web-app>