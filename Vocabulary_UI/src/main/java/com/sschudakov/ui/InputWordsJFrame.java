/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sschudakov.ui;

import com.sschudakov.request.UserRequestManager;

import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.List;

/**
 * @author Semen
 */
public class InputWordsJFrame extends javax.swing.JFrame {

    /**
     * Creates new form InputWrodsJFrame
     */
    public InputWordsJFrame() {
        initComponents();

        wordsCollectionsJT.getColumnModel().getColumn(0).setMinWidth(220);
        wordsCollectionsJT.getColumnModel().getColumn(1).setMinWidth(60);
        wordsCollectionsJT.getColumnModel().getColumn(1).setPreferredWidth(60);
        wordsCollectionsJT.getColumnModel().getColumn(0).setPreferredWidth(220);
        this.userRequestManager = new UserRequestManager();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        WordPanel = new javax.swing.JPanel();
        wordsLanguageJCB = new javax.swing.JComboBox<>();
        wordsWordValueJTF = new javax.swing.JTextField();
        meaningsJLabel = new javax.swing.JLabel();
        wordCollectionsJL = new javax.swing.JLabel();
        wordsMeaningsLanguageJCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordsMeaningsJL = new javax.swing.JList<>();
        wordsSaveWordJB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        wordsCollectionsJT = new javax.swing.JTable();
        separator = new javax.swing.JSeparator();
        wordsAddMeaningJB = new javax.swing.JButton();
        wordsCreateCollectionJB = new javax.swing.JButton();
        wordsCollectionNameJTF = new javax.swing.JTextField();
        wordsWordClassJCB = new javax.swing.JComboBox<>();
        wordsMeaningJTF = new javax.swing.JTextField();
        wordsDeleteMeaningJB = new javax.swing.JButton();
        wordFoundIndidcator = new com.sschudakov.ui.IndicatorLed();
        wordsDeleteWordJB = new javax.swing.JButton();
        wordsLanguageJL = new javax.swing.JLabel();
        wordsWordClassJL = new javax.swing.JLabel();
        wordsMeaningsLanguageJL = new javax.swing.JLabel();
        CollectionsPanel = new javax.swing.JPanel();
        collectionsLanguageJCB = new javax.swing.JComboBox<>();
        collectionsCollectionNameJTF = new javax.swing.JTextField();
        collectionsCreateCollectionJB = new javax.swing.JButton();
        GroupsWordList = new javax.swing.JScrollPane();
        collectionsWordsJL = new javax.swing.JList<>();
        collectionDeleteCollectionJB = new javax.swing.JButton();
        collectionsDeleteWordsJB = new javax.swing.JButton();
        MegaListPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        languagesWordsJL = new javax.swing.JList<>();
        DeleteWordButton = new javax.swing.JButton();
        languagesLanguageJCB = new javax.swing.JComboBox<>();
        languagesRemoveWordsJB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabbedPane.setPreferredSize(new java.awt.Dimension(600, 500));
        TabbedPane.setRequestFocusEnabled(false);

        WordPanel.setPreferredSize(new java.awt.Dimension(600, 400));

        wordsLanguageJCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wordsLanguageJCBItemStateChanged(evt);
            }
        });

        wordsWordValueJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                wordsWordValueJTFKeyPressed(evt);
            }
        });

        meaningsJLabel.setText("Meanings");

        wordCollectionsJL.setText("collections");

        wordsMeaningsLanguageJCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wordsMeaningsLanguageJCBItemStateChanged(evt);
            }
        });

        jScrollPane1.setViewportView(wordsMeaningsJL);

        wordsSaveWordJB.setText("save word");
        wordsSaveWordJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsSaveWordJBActionPerformed(evt);
            }
        });

        jScrollPane2.setPreferredSize(new java.awt.Dimension(280, 326));

        wordsCollectionsJT.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {"My words", null},
                        {"Lesson1", null},
                        {"Lesson2", null},
                        {null, null},
                        {null, null}
                },
                new String[]{
                        "Collection", ""
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        wordsCollectionsJT.setPreferredSize(new java.awt.Dimension(286, 298));
        jScrollPane2.setViewportView(wordsCollectionsJT);

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        wordsAddMeaningJB.setText("add meaning");
        wordsAddMeaningJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsAddMeaningJBActionPerformed(evt);
            }
        });

        wordsCreateCollectionJB.setText("create collection");
        wordsCreateCollectionJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsCreateCollectionJBActionPerformed(evt);
            }
        });

        wordsWordClassJCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wordsWordClassJCBItemStateChanged(evt);
            }
        });

        wordsDeleteMeaningJB.setText("remove meaning");
        wordsDeleteMeaningJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsDeleteMeaningJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout wordFoundIndidcatorLayout = new javax.swing.GroupLayout(wordFoundIndidcator);
        wordFoundIndidcator.setLayout(wordFoundIndidcatorLayout);
        wordFoundIndidcatorLayout.setHorizontalGroup(
                wordFoundIndidcatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 20, Short.MAX_VALUE)
        );
        wordFoundIndidcatorLayout.setVerticalGroup(
                wordFoundIndidcatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 29, Short.MAX_VALUE)
        );

        wordsDeleteWordJB.setText("deleteByName word");
        wordsDeleteWordJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsDeleteWordJBActionPerformed(evt);
            }
        });

        wordsLanguageJL.setText("language");

        wordsWordClassJL.setText("word class");

        wordsMeaningsLanguageJL.setText("meanings language");

        javax.swing.GroupLayout WordPanelLayout = new javax.swing.GroupLayout(WordPanel);
        WordPanel.setLayout(WordPanelLayout);
        WordPanelLayout.setHorizontalGroup(
                WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WordPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, WordPanelLayout.createSequentialGroup()
                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(wordsAddMeaningJB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                                                                        .addComponent(wordsMeaningJTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                                                                        .addComponent(wordsDeleteMeaningJB, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WordPanelLayout.createSequentialGroup()
                                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                                .addComponent(wordsMeaningsLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(6, 6, 6))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WordPanelLayout.createSequentialGroup()
                                                                                .addComponent(meaningsJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                                .addComponent(jScrollPane1)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                                .addComponent(wordsMeaningsLanguageJL, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                .addComponent(wordsSaveWordJB, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(wordsDeleteWordJB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(wordsCollectionNameJTF, javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(wordsCreateCollectionJB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(wordCollectionsJL, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                .addComponent(wordsLanguageJL, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(wordsWordClassJL, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                .addComponent(wordsLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(wordsWordClassJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                .addComponent(wordsWordValueJTF)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(wordFoundIndidcator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(186, 186, 186))
        );
        WordPanelLayout.setVerticalGroup(
                WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WordPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wordsLanguageJL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wordsWordClassJL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wordsLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wordsWordClassJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(wordsWordValueJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wordFoundIndidcator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(wordsDeleteWordJB)
                                                        .addComponent(wordsSaveWordJB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(wordCollectionsJL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(wordsMeaningsLanguageJL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(WordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                .addComponent(wordsMeaningsLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(meaningsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(wordsDeleteMeaningJB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(wordsMeaningJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(wordsAddMeaningJB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(wordsCollectionNameJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(wordsCreateCollectionJB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(WordPanelLayout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(separator)
                                                .addGap(40, 40, 40))))
        );

        TabbedPane.addTab("Words", WordPanel);

        collectionsCollectionNameJTF.setToolTipText("Collection name");

        collectionsCreateCollectionJB.setText("create collection");
        collectionsCreateCollectionJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectionsCreateCollectionJBActionPerformed(evt);
            }
        });

        GroupsWordList.setViewportView(collectionsWordsJL);

        collectionDeleteCollectionJB.setText("deleteByName collection");
        collectionDeleteCollectionJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectionDeleteCollectionJBActionPerformed(evt);
            }
        });

        collectionsDeleteWordsJB.setText("remove words");
        collectionsDeleteWordsJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectionsDeleteWordsJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CollectionsPanelLayout = new javax.swing.GroupLayout(CollectionsPanel);
        CollectionsPanel.setLayout(CollectionsPanelLayout);
        CollectionsPanelLayout.setHorizontalGroup(
                CollectionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CollectionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(CollectionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(collectionsLanguageJCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(GroupsWordList, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                                        .addComponent(collectionsCollectionNameJTF))
                                .addContainerGap())
                        .addGroup(CollectionsPanelLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(collectionsCreateCollectionJB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(collectionDeleteCollectionJB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(collectionsDeleteWordsJB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
        );
        CollectionsPanelLayout.setVerticalGroup(
                CollectionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(CollectionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(collectionsCollectionNameJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(CollectionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(collectionsCreateCollectionJB)
                                        .addComponent(collectionDeleteCollectionJB)
                                        .addComponent(collectionsDeleteWordsJB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(collectionsLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GroupsWordList, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        TabbedPane.addTab("Collections", CollectionsPanel);

        jScrollPane3.setViewportView(languagesWordsJL);

        DeleteWordButton.setText("Delete");

        languagesLanguageJCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languagesLanguageJCBItemStateChanged(evt);
            }
        });

        languagesRemoveWordsJB.setText("remove words");
        languagesRemoveWordsJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languagesRemoveWordsJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MegaListPanelLayout = new javax.swing.GroupLayout(MegaListPanel);
        MegaListPanel.setLayout(MegaListPanelLayout);
        MegaListPanelLayout.setHorizontalGroup(
                MegaListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MegaListPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(MegaListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                                        .addComponent(DeleteWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(MegaListPanelLayout.createSequentialGroup()
                                                .addComponent(languagesLanguageJCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(languagesRemoveWordsJB)))
                                .addContainerGap())
        );
        MegaListPanelLayout.setVerticalGroup(
                MegaListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MegaListPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(MegaListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(languagesLanguageJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(languagesRemoveWordsJB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteWordButton)
                                .addContainerGap())
        );

        TabbedPane.addTab("Languages", MegaListPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );

        TabbedPane.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void wordsSaveWordJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsSaveWordJBActionPerformed
        String word = this.wordsWordValueJTF.getText();
        String language = (String) this.wordsWordClassJCB.getSelectedItem();
        String wordClass = (String) this.wordsLanguageJCB.getSelectedItem();
        try {
            this.userRequestManager.saveWordInformation(
                    word,
                    wordClass,
                    language
            );
            /*
            this.userRequestManager.removeMeanings(
                    word,
                    language,
                    extractMeaningsToBeDeleted()
            );
            this.userRequestManager.putInCollections(
                    word,
                    language,
                    extractCollectionsToBeAddedTo()
            );
            this.userRequestManager.removeFromCollections(
                    word,
                    language,
                    extractCollectionsToBeRemovedFrom()
            );*/
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_wordsSaveWordJBActionPerformed
    /*private Map<String, Collection<String>> extractMeaningsToBeAdded() {
        throw new UnsupportedOperationException();
    }

    private Map<String, Collection<String>> extractMeaningsToBeDeleted() {
        throw new UnsupportedOperationException();
    }

    private Collection<String> extractCollectionsToBeAddedTo() {
        throw new UnsupportedOperationException();
    }

    private Collection<String> extractCollectionsToBeRemovedFrom() {
        throw new UnsupportedOperationException();
    }*/
    private void wordsDeleteWordJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsDeleteWordJBActionPerformed
        try {
            this.userRequestManager.deleteWord(
                    this.wordsWordValueJTF.getText(),
                    (String) this.wordsLanguageJCB.getSelectedItem()
            );
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_wordsDeleteWordJBActionPerformed


    private void wordsAddMeaningJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsAddMeaningJBActionPerformed
        try {
            this.userRequestManager.addMeaning(
                    this.wordsWordValueJTF.getText(),
                    (String) this.wordsLanguageJCB.getSelectedItem(),
                    this.wordsMeaningJTF.getText(),
                    (String) this.wordsMeaningsLanguageJCB.getSelectedItem()
            );
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_wordsAddMeaningJBActionPerformed

    private void wordsDeleteMeaningJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsDeleteMeaningJBActionPerformed
        try {
            this.userRequestManager.removeMeaning(
                    this.wordsWordValueJTF.getText(),
                    (String) this.wordsLanguageJCB.getSelectedItem(),
                    this.wordsMeaningJTF.getText(),
                    (String) this.wordsMeaningsLanguageJCB.getSelectedItem()
            );
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_wordsDeleteMeaningJBActionPerformed


    private void wordsCreateCollectionJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsCreateCollectionJBActionPerformed
        try {
            this.userRequestManager.createCollection(this.wordsCollectionNameJTF.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_wordsCreateCollectionJBActionPerformed


    private void wordsWordValueJTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wordsWordValueJTFKeyPressed
        //todo: this is test implementation, write normal implementation later
        if (wordsWordValueJTF.getText().length() % 2 == 0) {
            wordFoundIndidcator.setColor(IndicatorLed.LedColor.GREEN);
        } else {
            wordFoundIndidcator.setColor(IndicatorLed.LedColor.RED);
        }
        wordFoundIndidcator.repaint();
    }//GEN-LAST:event_wordsWordValueJTFKeyPressed

    private void wordsMeaningsLanguageJCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wordsMeaningsLanguageJCBItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_wordsMeaningsLanguageJCBItemStateChanged

    private void wordsLanguageJCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wordsLanguageJCBItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_wordsLanguageJCBItemStateChanged

    private void wordsWordClassJCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wordsWordClassJCBItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_wordsWordClassJCBItemStateChanged



    private void collectionsCreateCollectionJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectionsCreateCollectionJBActionPerformed
        try {
            this.userRequestManager.createCollection(this.collectionsCollectionNameJTF.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_collectionsCreateCollectionJBActionPerformed

    private void collectionDeleteCollectionJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectionDeleteCollectionJBActionPerformed
        try {
            this.userRequestManager.deleteCollection(this.collectionsCollectionNameJTF.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_collectionDeleteCollectionJBActionPerformed

    private void collectionsDeleteWordsJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectionsDeleteWordsJBActionPerformed
        for (String s : extractSelectedWordsCollectionsTab()) {
            try {
                this.userRequestManager.removeFromCollection(
                        s,
                        (String) this.collectionsLanguageJCB.getSelectedItem(),
                        this.collectionsCollectionNameJTF.getText()
                );
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_collectionsDeleteWordsJBActionPerformed

    private List<String> extractSelectedWordsCollectionsTab() {
        throw new UnsupportedOperationException();
    }



    private void languagesLanguageJCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_languagesLanguageJCBItemStateChanged
        try {
            renderLanguageWords(
                    this.userRequestManager.getWordsByLanguageName(
                            (String) this.languagesLanguageJCB.getSelectedItem()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_languagesLanguageJCBItemStateChanged

    private void renderLanguageWords(List<String> words) {
        throw new UnsupportedOperationException();
    }

    private void languagesRemoveWordsJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languagesRemoveWordsJBActionPerformed
        String language = (String) this.languagesLanguageJCB.getSelectedItem();
        for (String s : extractSelectedWordsLanguagesTab()) {
            try {
                this.userRequestManager.deleteWord(s, language);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_languagesRemoveWordsJBActionPerformed

    private List<String> extractSelectedWordsLanguagesTab() {
        throw new UnsupportedOperationException();
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CollectionsPanel;
    private javax.swing.JButton DeleteWordButton;
    private javax.swing.JScrollPane GroupsWordList;
    private javax.swing.JPanel MegaListPanel;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel WordPanel;
    private javax.swing.JButton collectionDeleteCollectionJB;
    private javax.swing.JTextField collectionsCollectionNameJTF;
    private javax.swing.JButton collectionsCreateCollectionJB;
    private javax.swing.JButton collectionsDeleteWordsJB;
    private javax.swing.JComboBox<String> collectionsLanguageJCB;
    private javax.swing.JList<String> collectionsWordsJL;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> languagesLanguageJCB;
    private javax.swing.JButton languagesRemoveWordsJB;
    private javax.swing.JList<String> languagesWordsJL;
    private javax.swing.JLabel meaningsJLabel;
    private javax.swing.JSeparator separator;
    private javax.swing.JLabel wordCollectionsJL;
    private com.sschudakov.ui.IndicatorLed wordFoundIndidcator;
    private javax.swing.JButton wordsAddMeaningJB;
    private javax.swing.JTextField wordsCollectionNameJTF;
    private javax.swing.JTable wordsCollectionsJT;
    private javax.swing.JButton wordsCreateCollectionJB;
    private javax.swing.JButton wordsDeleteMeaningJB;
    private javax.swing.JButton wordsDeleteWordJB;
    private javax.swing.JComboBox<String> wordsLanguageJCB;
    private javax.swing.JLabel wordsLanguageJL;
    private javax.swing.JTextField wordsMeaningJTF;
    private javax.swing.JList<String> wordsMeaningsJL;
    private javax.swing.JComboBox<String> wordsMeaningsLanguageJCB;
    private javax.swing.JLabel wordsMeaningsLanguageJL;
    private javax.swing.JButton wordsSaveWordJB;
    private javax.swing.JComboBox<String> wordsWordClassJCB;
    private javax.swing.JLabel wordsWordClassJL;
    private javax.swing.JTextField wordsWordValueJTF;
    // End of variables declaration//GEN-END:variables
    private UserRequestManager userRequestManager;
}
